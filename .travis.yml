version: ~> 1.0

language: scala
services:
  - docker

# make comparing to origin/master work and fetch full history for correct current and previous version detection
git:
  depth: 500

before_install:
  # using jabba for custom jdk management
  - if [ ! -f ~/.jabba/jabba.sh ]; then curl -L -v --retry 5 -o jabba-install.sh https://raw.githubusercontent.com/shyiko/jabba/0.11.2/install.sh && bash jabba-install.sh; fi
  - . ~/.jabba/jabba.sh
  - jabba install ${JDK:=adopt@~1.11-0}
  - jabba use ${JDK:=adopt@~1.11-0}

env:
  global:
    # TODO change to false when Travis works again
    - RUN_DROP_TRAVIS_CACHES_STAGE=true

jobs:
  include:
    - stage: drop-travis-caches
      script:
        - rm -rf $HOME/.m2
        - rm -rf $HOME/.ivy2/cache
        - rm -rf $HOME/.sbt/boot
        - rm -rf $HOME/.sbt/launchers
        - rm -rf $HOME/.cache/coursier
        - rm -rf $HOME/.jabba
      name: "drop-travis-caches"

    - stage: check-files
      script:
        - scripts/copy-identical-files.sh
        - git diff --exit-code --color || { echo "[error] Found modified file that was expected to be identical. Run scripts/copy-identical-files.sh"; false; }
      name: "copy-identical-files"

    - stage: test
      script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-analytics-service-scala
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Shopping analytics service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-analytics-service-java
        - mvn spotless:check test
      name: "Shopping analytics service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Shopping cart service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-cart-service-java
        - docker-compose up -d
        - mvn spotless:check test
      name: "Shopping cart service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-order-service-scala
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Shopping order service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/shopping-order-service-java
        - mvn spotless:check test
      name: "Shopping order service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/00-shopping-analytics-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "00 Shopping analytics service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/00-shopping-analytics-service-java
        - docker-compose up -d
        - mvn spotless:check test
      name: "00 Shopping analytics service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/00-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "00 Shopping cart service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/00-shopping-cart-service-java
        - docker-compose up -d
        - mvn spotless:check test
      name: "00 Shopping cart service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/00-shopping-order-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "00 Shopping order service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/00-shopping-order-service-java
        - docker-compose up -d
        - mvn spotless:check test
      name: "00 Shopping order service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/01-shopping-cart-service-scala
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "01 Shopping cart service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/01-shopping-cart-service-java
        - docker-compose up -d
        - mvn spotless:check test
      name: "01 Shopping cart service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/02-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "02 Shopping cart service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/02-shopping-cart-service-java
        - docker-compose up -d
        - mvn spotless:check test
      name: "02 Shopping cart service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/03-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "03 Shopping cart service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/03-shopping-cart-service-java
        - docker-compose up -d
        - mvn spotless:check test
      name: "03 Shopping cart service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/04-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "04 Shopping cart service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/04-shopping-cart-service-java
        - docker-compose up -d
        - mvn spotless:check test
      name: "04 Shopping cart service (Java)"

    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/05-shopping-cart-service-scala
        - docker-compose up -d
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "05 Shopping cart service (Scala)"
    - script:
        - cd docs-source/docs/modules/microservices-tutorial/examples/05-shopping-cart-service-java
        - docker-compose up -d
        - mvn spotless:check test
      name: "05 Shopping cart service (Java)"

    - script:
        - cd docs-source/docs/modules/how-to/examples/shopping-cart-service-scala
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Howto example code"
    - script:
        - cd docs-source/docs/modules/how-to/examples/cleanup-dependencies-project
        - sbt -jvm-opts .jvmopts-travis "test; scalafmtCheckAll"
      name: "Howto cleanup dependencies"

    - stage: site
      script:
        - make html-author-mode
      name: "Run Antora to create site"

stages:
  - name: drop-travis-caches
    # to drop caches trigger a custom build with
    # env:
    #   global:
    #     - RUN_DROP_TRAVIS_CACHES_STAGE=true
    if: env(RUN_DROP_TRAVIS_CACHES_STAGE) = true

  - name: check-files
    if: (NOT tag =~ ^v)

  - name: test
    if: (NOT tag =~ ^v)

  - name: site

after_failure:
  - docker-compose logs

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -delete
  - find $HOME/.sbt -name "*.lock" -delete

cache:
  directories:
    - $HOME/.m2
    - $HOME/.ivy2/cache
    - $HOME/.sbt/boot
    - $HOME/.sbt/launchers
    - $HOME/.cache/coursier
    - $HOME/.jabba

# safelist
branches:
  only:
    - main
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
